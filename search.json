[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COMP/STAT112 Notebook",
    "section": "",
    "text": "Welcome\nWelcome to my online portfolio for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "bw/bw-uni.html",
    "href": "bw/bw-uni.html",
    "title": "1  Univariate Viz",
    "section": "",
    "text": "Use this file to generate a professional looking univariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-bi.html",
    "href": "bw/bw-bi.html",
    "title": "2  Bivariate Viz",
    "section": "",
    "text": "Use this file to generate a professional looking bivariate visualization. The visualization will not perfect the first time but you are expected to improve it throughout the semester especially after covering advanced topics such as effective viz.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-tri.html",
    "href": "bw/bw-tri.html",
    "title": "3  Trivariate Viz",
    "section": "",
    "text": "Use this file to generate a professional looking trivariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Trivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-quad.html",
    "href": "bw/bw-quad.html",
    "title": "4  Quadvariate Viz",
    "section": "",
    "text": "Use this file to generate a professional looking quadvariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quadvariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-spatial.html",
    "href": "bw/bw-spatial.html",
    "title": "5  Spatial Viz",
    "section": "",
    "text": "Use this file to generate a professional looking spatial visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html",
    "href": "ica/ica-uni.html",
    "title": "\n6  Univariate Viz\n",
    "section": "",
    "text": "# Import data\nhikes &lt;- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n\n\n# Exercise 1:\n# Categorical (rating): observed categories, counts/proportions, relative prevalence,\n#                       logical order, clear axis labels.\n# Quantitative (elevation): range, center (mean/median), shape (skewness), spread, outliers.\n\n# Exercise 2: load ggplot tools\nlibrary(tidyverse)  # loads ggplot2 for visualization\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Exercise 3–5: Bar chart of difficulty ratings\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()\n\n\n\n\n\n\n# • Shows the three observed difficulty levels\n# • Counts per level reveal that “moderate” is most common\n\n# Exercise 6: Bar chart of elevation (ineffective for continuous data)\nggplot(hikes, aes(x = elevation)) +\n  geom_bar() +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n# • A bar for each unique elevation leads to clutter\n# • Fails to reveal overall distribution shape\n\n# Exercise 8–10: Histograms of elevation\n\n# Default bins\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram() +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n# • Rough view of distribution; bin boundaries may be arbitrary\n\n# White borders for clarity\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n# • Separates bins visually, improving readability\n\n# Blue fill\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n# • Combines border and fill for better aesthetics\n\n# Oversmoothed (binwidth = 1000)\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 1000) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n# • Very wide bins hide detail; distribution too coarse\n\n# Noisy (binwidth = 5)\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 5) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n# • Very narrow bins create noisy, spiky plot\n\n# Balanced (binwidth = 200)\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\", binwidth = 200) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n# • Binwidth reveals center, spread, skew, and outliers effectively\n\n# Exercise 11: Density plot of elevation\nggplot(hikes, aes(x = elevation)) +\n  geom_density(color = \"blue\", fill = \"orange\", alpha = 0.5) +\n  labs(x = \"Elevation (feet)\", y = \"Density\")\n\n\n\n\n\n\n# • Smooth distribution (area = 1), shows typical elevation, variability, skewness\n\nUse this file for practice with the univariate viz in-class activity. Refer to the class website for details.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html",
    "href": "ica/ica-bi.html",
    "title": "\n7  Bivariate Viz\n",
    "section": "",
    "text": "# Load data\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n# Check it out\nhead(elections)\n\n  state_name state_abbr historical    county_name county_fips total_votes_20\n1    Alabama         AL        red Autauga County        1001          27770\n2    Alabama         AL        red Baldwin County        1003         109679\n3    Alabama         AL        red Barbour County        1005          10518\n4    Alabama         AL        red    Bibb County        1007           9595\n5    Alabama         AL        red  Blount County        1009          27588\n6    Alabama         AL        red Bullock County        1011           4613\n  repub_pct_20 dem_pct_20 winner_20 total_votes_16 repub_pct_16 dem_pct_16\n1        71.44      27.02     repub          24661        73.44      23.96\n2        76.17      22.41     repub          94090        77.35      19.57\n3        53.45      45.79     repub          10390        52.27      46.66\n4        78.43      20.70     repub           8748        76.97      21.42\n5        89.57       9.57     repub          25384        89.85       8.47\n6        24.84      74.70       dem           4701        24.23      75.09\n  winner_16 total_votes_12 repub_pct_12 dem_pct_12 winner_12 total_population\n1     repub          23909        72.63      26.58     repub            54907\n2     repub          84988        77.39      21.57     repub           187114\n3     repub          11459        48.34      51.25       dem            27321\n4     repub           8391        73.07      26.22     repub            22754\n5     repub          23980        86.49      12.35     repub            57623\n6       dem           5318        23.51      76.31       dem            10746\n  percent_white percent_black percent_asian percent_hispanic per_capita_income\n1            76            18             1                2             24571\n2            83             9             1                4             26766\n3            46            46             0                5             16829\n4            75            22             0                2             17427\n5            88             1             0                8             20730\n6            22            71             0                6             18628\n  median_rent median_age\n1         668       37.5\n2         693       41.5\n3         382       38.3\n4         351       39.4\n5         403       39.6\n6         276       39.6\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Exercise 0a: Percent of counties won by Republicans in 2020\nprop_repub_2020 &lt;- mean(elections$winner_20 == \"repub\")\nprop_repub_2020  # ~ proportion of counties won by the GOP\n\n[1] 0.8275973\n\n# Plot the 2020 winner distribution\nggplot(elections, aes(x = winner_20)) +\n  geom_bar(fill = c(\"red\", \"blue\")) +\n  labs(x = \"2020 Winner\", y = \"Number of Counties\")\n\n\n\n\n\n\n# • Shows counts of counties won by each party\n# • Follow-up: which regions drove this split?\n\n# Exercise 0b: Distribution of Republican vote share in 2020\nggplot(elections, aes(x = repub_pct_20)) +\n  geom_histogram(color = \"white\", bins = 30) +\n  labs(x = \"Republican Vote % (2020)\", y = \"County Count\")\n\n\n\n\n\n\n# • Slight left skew: more counties with &gt;50% Republican support\n# • Follow-up: which demographics correlate with high GOP support?\n\n# Exercise 1: Scatter of repub_pct_20 vs repub_pct_16\nggplot(elections, aes(x = repub_pct_16, y = repub_pct_20)) +\n  geom_point() +\n  labs(x = \"GOP % in 2016\", y = \"GOP % in 2020\")\n\n\n\n\n\n\n# • Data frame + mapping; geom_point draws the dots\n\n# Exercise 2: Customize scatter glyphs and labels\nggplot(elections, aes(x = repub_pct_16, y = repub_pct_20)) +\n  geom_point(shape = 3, color = \"orange\")\n\n\n\n\n\n\n# • shape=3 changes the symbol to a plus; color sets point color\n\nggplot(elections, aes(x = repub_pct_16, y = repub_pct_20, label = state_abbr)) +\n  geom_text(size = 2)\n\n\n\n\n\n\n# • geom_text labels each point with its state abbreviation\n\n# Exercise 3: Relationship summary\n# • Strong, positive linear trend\n# • Counties with higher 2016 GOP % tend to have higher 2020 GOP %\n# • Outliers often in swing states (e.g., some WI/MI counties deviated)\n\n# Exercise 4a: Smooth trend only\nggplot(elections, aes(x = repub_pct_16, y = repub_pct_20)) +\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n# • Local smoothing line without points\n\n# Exercise 4b: Linear model fit\nggplot(elections, aes(x = repub_pct_16, y = repub_pct_20)) +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n# • Best-fit straight line (linear regression)\n\n# Exercise 5: GOP % vs median_rent and median_age\nggplot(elections, aes(x = median_rent, y = repub_pct_20)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  labs(x = \"Median Rent\", y = \"GOP % (2020)\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n# • Moderately negative slope: higher rent → slightly less GOP support\n\nggplot(elections, aes(x = median_age, y = repub_pct_20)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  labs(x = \"Median Age\", y = \"GOP % (2020)\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n# • Weak positive slope: older counties → slightly more GOP support\n# • median_age shows a clearer trend (steeper slope) than median_rent\n\n# Exercise 6: GOP % vs historical (scatter)\nggplot(elections, aes(x = historical, y = repub_pct_20)) +\n  geom_point()\n\n\n\n\n\n\n# • Overplotting makes it hard to compare distributions by category\n\n# Exercise 7: Violin and boxplots by historical category\nggplot(elections, aes(x = historical, y = repub_pct_20)) +\n  geom_violin() +\n  labs(x = \"State Trend\", y = \"GOP % (2020)\")\n\n\n\n\n\n\n# • Violin shows full density shape per category\n\nggplot(elections, aes(x = historical, y = repub_pct_20)) +\n  geom_boxplot() +\n  labs(x = \"State Trend\", y = \"GOP % (2020)\")\n\n\n\n\n\n\n# • Boxplot summarizes median, IQR, range; red &gt; purple &gt; blue in median GOP %\n\n# Exercise 8: Faceted density plots by historical\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_manual(values = c(\"red\",\"purple\",\"blue\")) +\n  facet_wrap(~ historical) +\n  labs(x = \"GOP % (2020)\", y = \"Density\")\n\n\n\n\n\n\n# • Faceting separates categories; alpha = 0.5 adds transparency\n\n# Exercise 9: Density with manual colors and transparency\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_manual(values = c(\"red\",\"purple\",\"blue\"))\n\n\n\n\n\n\n# • scale_fill_manual assigns specific colors\n\n# Exercise 10: Reflection (no code)\n# • Favorite: boxplots for quick comparison of medians and IQRs.\n# • Pro density vs box: shows full distribution shape.\n# • Con density vs box: less precise quantile information.\n\n# Exercise 11: Categorical vs categorical (bar plots)\nggplot(elections, aes(x = historical)) + geom_bar()\n\n\n\n\n\n\n# • Counts of counties by state trend\n\nggplot(elections, aes(x = winner_20)) + geom_bar()\n\n\n\n\n\n\n# • Counts of GOP vs Dem county wins\n\n# Exercise 12: Four bar-plot types\n# Stacked\nggplot(elections, aes(x = historical, fill = winner_20)) + geom_bar()\n\n\n\n\n\n\n# Faceted\nggplot(elections, aes(x = winner_20)) + geom_bar() + facet_wrap(~ historical)\n\n\n\n\n\n\n# Side-by-side\nggplot(elections, aes(x = historical, fill = winner_20)) + geom_bar(position = \"dodge\")\n\n\n\n\n\n\n# Proportional\nggplot(elections, aes(x = historical, fill = winner_20)) + geom_bar(position = \"fill\")\n\n\n\n\n\n\n# • Pro of proportional: compares proportions directly.\n# • Con: loses absolute count information.\n\nUse this file for practice with the bivariate viz in-class activity. Refer to the class website for details.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html",
    "href": "ica/ica-multi.html",
    "title": "\n8  Mulivariate Viz\n",
    "section": "",
    "text": "# Import and check out data\neducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\nhead(education)\n\n       State expend ratio salary frac verbal math  sat  fracCat\n1    Alabama  4.405  17.2 31.144    8    491  538 1029   (0,15]\n2     Alaska  8.963  17.6 47.951   47    445  489  934 (45,100]\n3    Arizona  4.778  19.3 32.175   27    448  496  944  (15,45]\n4   Arkansas  4.459  17.1 28.934    6    482  523 1005   (0,15]\n5 California  4.992  24.0 41.078   45    417  485  902  (15,45]\n6   Colorado  5.443  18.4 34.571   29    462  518  980  (15,45]\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Exercise 1a: Plot average SAT scores by state\nggplot(education, aes(x = reorder(State, sat), y = sat)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  labs(x = \"State\", y = \"Average SAT\")\n\n\n\n\n\n\n# • Range: ~900 to ~1100\n# • Typical: most states around ~1000\n# • Shape: a few high‐scoring outliers, slight skew\n# • Non‐normal: extreme values (e.g. small states or selective testers)\n\n# Exercise 2a: SAT vs per‐pupil spending\nggplot(education, aes(x = expend, y = sat)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(x = \"Expenditure per Pupil (thousands $)\", y = \"Average SAT\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n# Trend: slight negative slope—higher spending ↔ lower SAT overall\n\n# Exercise 2a: SAT vs teacher salary\nggplot(education, aes(x = salary, y = sat)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(x = \"Average Teacher Salary (thousands $)\", y = \"Average SAT\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n# Trend: flat-to-slight negative—no clear positive link between salary and SAT\n\n# Exercise 3: Trivariate viz (sat ~ expend colored by salary)\nggplot(education, aes(x = expend, y = sat, color = salary)) +\n  geom_point(size = 3) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(color = \"Salary (k$)\", x = \"Spending (k$)\", y = \"Average SAT\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\n# • Color gradient shows salary levels\n# • Both higher spending and higher salary states tend to cluster differently,\n#   but overall relationships remain weak/negative\n\n# Exercise 4: Discretize spending into 2 groups\nggplot(education, aes(x = salary, y = sat, color = cut(expend, 2))) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(color = \"Spending Group\", x = \"Salary (k$)\", y = \"Average SAT\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n# • cut(...,2) splits into low/high spending\n# • If cut(...,3), you get low/medium/high—more nuance\n# • Within each spending group, SAT and salary trend positive or flat\n\n# Exercise 5a: Univariate viz of fracCat\nggplot(education, aes(x = fracCat)) +\n  geom_bar(fill = \"lightgreen\") +\n  labs(x = \"SAT Participation Category\", y = \"Number of States\")\n\n\n\n\n\n\n# • Shows counts: most states medium (15–45%), fewer low (&lt;15%) or high (&gt;45%)\n\n# Exercise 5b: SAT vs fracCat (boxplot & violin)\nggplot(education, aes(x = fracCat, y = sat)) +\n  geom_boxplot(fill = \"orange\") +\n  labs(x = \"Participation Category\", y = \"Average SAT\")\n\n\n\n\n\n\n# • Low participation → highest median SAT\n# • High participation → lowest median SAT\n\nggplot(education, aes(x = fracCat, y = sat)) +\n  geom_violin(trim = FALSE, fill = \"purple\", alpha = 0.6) +\n  labs(x = \"Participation Category\", y = \"Average SAT\")\n\n\n\n\n\n\n# • Violin confirms boxplot pattern and shows full distribution shape\n\n# Exercise 5c: Trivariate viz (sat ~ expend colored by fracCat)\nggplot(education, aes(x = expend, y = sat, color = fracCat)) +\n  geom_point(size = 3) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(color = \"Participation\", x = \"Spending (k$)\", y = \"Average SAT\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n# • Within each fracCat group, spending and SAT correlate positively\n# • Overall negative trend is due to mixing groups with different fracCat\n\n# Exercise 5d: Simpson’s Paradox explanation\n# • Low‐participation states (small test‐taker fraction) have high SAT but low spending.\n# • High‐participation states have lower SAT but higher spending.\n# • Aggregating creates a misleading negative overall correlation,\n#   whereas controlling for fracCat reveals the true within‐group positive relationships.\n\nUse this file for practice with the mulivariate viz in-class activity. Refer to the class website for details.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html",
    "href": "ica/ica-spatial.html",
    "title": "9  Spatial Viz",
    "section": "",
    "text": "Use this file for practice with the spatial viz in-class activity. Refer to the class website for details.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-effective.html",
    "href": "ica/ica-effective.html",
    "title": "\n10  Effective Viz\n",
    "section": "",
    "text": "# Load tidyverse package for plotting and wrangling\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Import the data\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |&gt; \n  mutate(date = as.Date(date))\n\n\n# Exercise 1a & 1b: Professionalism\n#| fig-cap: \"Scatterplot of 9 am vs 3 pm temperatures in three Australian locations.\"\nggplot(weather, aes(x = temp9am, y = temp3pm, color = location)) + \n  geom_point() + \n  labs(\n    x     = \"Morning Temperature (°C)\",      # A: short label with units\n    y     = \"Afternoon Temperature (°C)\",    # B: short label with units\n    title = \"Daily Temperature Comparison\",  # C: &lt;10-word descriptive title\n    color = \"Location\"                       # D: legend title\n  )\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n# Answers for Part a:\n# A = \"Morning Temperature (°C)\"\n# B = \"Afternoon Temperature (°C)\"\n# C = \"Daily Temperature Comparison\"\n# D = \"Location\"\n\n# Exercise 2: Accessibility\n#| fig-cap: \"Density plots of 3 pm temperatures in three Australian locations.\"\n#| fig-alt: \"Overlaid density curves of 3 pm temperatures in Hobart, Uluru, and Wollongong, showing Hobart’s temps cluster around 15–20 °C, Uluru’s cluster around 25–30 °C, and Wollongong in between. Data from mac-stat.github.io.\"\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5) + \n  labs(\n    x    = \"3 pm Temperature (°C)\",\n    fill = \"Location\"\n  )\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n# Accessibility notes:\n# - fig-alt describes plot type, locations, key takeaway, and data source.\n# - Test colors under color-blind simulators; consider scale_fill_viridis_d() for a color-blind–safe palette.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Effective Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html",
    "href": "ica/ica-wrangling.html",
    "title": "\n11  Wrangling\n",
    "section": "",
    "text": "# Load tidyverse & data\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n# Get a background map\nlibrary(socviz)\ndata(county_map)\n\n# Make a choropleth map\nlibrary(RColorBrewer)  # For the color scale\nlibrary(ggthemes) # For theme_map\nelections |&gt; \n  mutate(county_fips = as.character(county_fips)) |&gt; \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips)) |&gt; \n  ggplot(aes(map_id = county_fips, fill = cut(repub_pct_20, breaks = seq(0, 100, by = 10)))) +\n    geom_map(map = county_map) +\n    scale_fill_manual(values = rev(brewer.pal(10, \"RdBu\")), name = \"% Republican\") +\n    expand_limits(x = county_map$long, y = county_map$lat)  + \n    theme_map() +\n    theme(legend.position = \"right\") + \n    coord_equal()\n\n\n\n\n\n\n\n\n# Load tidyverse for data wrangling and plotting\nlibrary(tidyverse)\n\n# Exercise 1: select Practice\n# Create elections_small with only the specified columns\nelections_small &lt;- elections %&gt;%\n  select(state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20,\n         total_votes_16, dem_pct_16)\nhead(elections_small)  # confirm it worked\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16\n1          24661      23.96\n2          94090      19.57\n3          10390      46.66\n4           8748      21.42\n5          25384       8.47\n6           4701      75.09\n\n# Exercise 2: filter Demo\n# Keep only counties in Hawaii\nelections_small %&gt;% \n  filter(state_name == \"Hawaii\")\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1     Hawaii   Hawaii County          87814        30.63      66.88\n2     Hawaii Honolulu County         382114        35.66      62.51\n3     Hawaii    Kauai County          33497        34.58      63.36\n4     Hawaii     Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          64865      63.61\n2         285683      61.48\n3          26335      62.49\n4          51942      64.45\n\n# Keep only counties in Hawaii or Delaware\nelections_small %&gt;% \n  filter(state_name %in% c(\"Hawaii\", \"Delaware\"))\n\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1   Delaware       Kent County          87025        47.12      51.19\n2   Delaware New Castle County         287633        30.72      67.81\n3   Delaware     Sussex County         129352        55.07      43.82\n4     Hawaii     Hawaii County          87814        30.63      66.88\n5     Hawaii   Honolulu County         382114        35.66      62.51\n6     Hawaii      Kauai County          33497        34.58      63.36\n7     Hawaii       Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          74253      44.91\n2         261468      62.30\n3         105814      37.17\n4          64865      63.61\n5         285683      61.48\n6          26335      62.49\n7          51942      64.45\n\n# Counties where GOP got &gt; 93.97% in 2020\nelections_small %&gt;% \n  filter(repub_pct_20 &gt; 93.97)\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  Borden County            416        95.43       3.85\n2      Texas    King County            159        94.97       5.03\n3      Texas Roberts County            550        96.18       3.09\n  total_votes_16 dem_pct_16\n1            365       8.49\n2            159       3.14\n3            550       3.64\n\n# Counties where GOP got ≥ 93.97% in 2020 (one more than above)\nelections_small %&gt;% \n  filter(repub_pct_20 &gt;= 93.97)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Montana Garfield County            813        93.97       5.04\n2      Texas   Borden County            416        95.43       3.85\n3      Texas     King County            159        94.97       5.03\n4      Texas  Roberts County            550        96.18       3.09\n  total_votes_16 dem_pct_16\n1            715       4.76\n2            365       8.49\n3            159       3.14\n4            550       3.64\n\n# Texas counties where Dems &gt; 65% in 2020, Method 1 (two filters)\nelections_small %&gt;% \n  filter(state_name == \"Texas\") %&gt;% \n  filter(dem_pct_20 &gt; 65)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67\n\n# Texas counties where Dems &gt; 65% in 2020, Method 2 (one filter)\nelections_small %&gt;% \n  filter(state_name == \"Texas\", dem_pct_20 &gt; 65)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67\n\n# Exercise 3: arrange Demo\n# Counties sorted lowest to highest GOP % in 2020\nelections_small %&gt;% \n  arrange(repub_pct_20) %&gt;% \n  head()\n\n            state_name            county_name total_votes_20 repub_pct_20\n1 District of Columbia   District of Columbia         344356         5.40\n2             Maryland Prince George's County         424855         8.73\n3             Maryland         Baltimore city         237461        10.69\n4             Virginia        Petersburg city          14118        11.22\n5             New York        New York County         694904        12.26\n6           California   San Francisco County         443458        12.72\n  dem_pct_20 total_votes_16 dem_pct_16\n1      92.15         280272      92.85\n2      89.26         351091      89.33\n3      87.28         208980      85.44\n4      87.75          13717      87.52\n5      86.78         591368      87.17\n6      85.27         365295      85.53\n\n# Counties sorted highest to lowest GOP % in 2020\nelections_small %&gt;% \n  arrange(desc(repub_pct_20)) %&gt;% \n  head()\n\n  state_name      county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas   Roberts County            550        96.18       3.09\n2      Texas    Borden County            416        95.43       3.85\n3      Texas      King County            159        94.97       5.03\n4    Montana  Garfield County            813        93.97       5.04\n5      Texas Glasscock County            653        93.57       5.97\n6   Nebraska     Grant County            402        93.28       4.98\n  total_votes_16 dem_pct_16\n1            550       3.64\n2            365       8.49\n3            159       3.14\n4            715       4.76\n5            602       5.65\n6            394       5.08\n\n# Exercise 4: mutate Demo\n# a) Create diff_20 = repub_pct_20 − dem_pct_20\nelections_small %&gt;% \n  mutate(diff_20 = repub_pct_20 - dem_pct_20) %&gt;% \n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 diff_20\n1          24661      23.96   44.42\n2          94090      19.57   53.76\n3          10390      46.66    7.66\n4           8748      21.42   57.73\n5          25384       8.47   80.00\n6           4701      75.09  -49.86\n\n# b) Compute repub_votes_20 via rounding\nelections_small %&gt;% \n  mutate(repub_votes_20 = round(total_votes_20 * repub_pct_20 / 100)) %&gt;% \n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 repub_votes_20\n1          24661      23.96          19839\n2          94090      19.57          83542\n3          10390      46.66           5622\n4           8748      21.42           7525\n5          25384       8.47          24711\n6           4701      75.09           1146\n\n# c) Logical column: did GOP win in 2020?\nelections_small %&gt;% \n  mutate(repub_win_20 = repub_pct_20 &gt; dem_pct_20) %&gt;% \n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 repub_win_20\n1          24661      23.96         TRUE\n2          94090      19.57         TRUE\n3          10390      46.66         TRUE\n4           8748      21.42         TRUE\n5          25384       8.47         TRUE\n6           4701      75.09        FALSE\n\n# Part b: Define Dem change and indicator\n# Change in Dem support 2020 vs 2016\nelections_small %&gt;% \n  mutate(dem_change = dem_pct_20 - dem_pct_16) %&gt;% \n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 dem_change\n1          24661      23.96       3.06\n2          94090      19.57       2.84\n3          10390      46.66      -0.87\n4           8748      21.42      -0.72\n5          25384       8.47       1.10\n6           4701      75.09      -0.39\n\n# Was Dem support higher in 2020 than 2016?\nelections_small %&gt;% \n  mutate(dem_higher_20 = dem_pct_20 &gt; dem_pct_16) %&gt;% \n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 dem_higher_20\n1          24661      23.96          TRUE\n2          94090      19.57          TRUE\n3          10390      46.66         FALSE\n4           8748      21.42         FALSE\n5          25384       8.47          TRUE\n6           4701      75.09         FALSE\n\n# Exercise 5: Pipe Series\n# a) Wisconsin counties where GOP lost in 2020, sorted by turnout\nelections_small %&gt;% \n  filter(state_name == \"Wisconsin\", repub_pct_20 &lt; dem_pct_20) %&gt;% \n  arrange(desc(total_votes_20)) %&gt;% \n  head()\n\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1  Wisconsin  Milwaukee County         458971        29.27      69.13\n2  Wisconsin       Dane County         344791        22.85      75.46\n3  Wisconsin       Rock County          85360        43.51      54.66\n4  Wisconsin  La Crosse County          67884        42.25      55.75\n5  Wisconsin Eau Claire County          58275        43.49      54.26\n6  Wisconsin    Portage County          40603        47.53      50.31\n  total_votes_16 dem_pct_16\n1         434970      66.44\n2         304729      71.38\n3          75043      52.42\n4          62785      51.61\n5          54080      50.43\n6          38123      48.59\n\n# b) Swapping filter & arrange still yields same rows; filtering first reduces data before sorting.\n# c) Advantage: filtering early limits data volume for subsequent steps.\n# d) Delaware counties with GOP win indicator\nelections_small %&gt;% \n  filter(state_name == \"Delaware\") %&gt;% \n  mutate(repub_win_20 = repub_pct_20 &gt; dem_pct_20) %&gt;% \n  select(county_name, repub_pct_20, dem_pct_20, repub_win_20)\n\n        county_name repub_pct_20 dem_pct_20 repub_win_20\n1       Kent County        47.12      51.19        FALSE\n2 New Castle County        30.72      67.81        FALSE\n3     Sussex County        55.07      43.82         TRUE\n\n# e) If we select before mutate, repub_win_20 doesn't yet exist → error. Order matters when selecting new vars.\n\n# Exercise 6: DIY Pipe Series\n# a) MN counties and their 2020 Dem % from highest to lowest\nelections_small %&gt;% \n  filter(state_name == \"Minnesota\") %&gt;% \n  select(county_name, dem_pct_20) %&gt;% \n  arrange(desc(dem_pct_20))\n\n                county_name dem_pct_20\n1             Ramsey County      71.50\n2           Hennepin County      70.46\n3               Cook County      65.58\n4          St. Louis County      56.64\n5             Dakota County      55.73\n6            Olmsted County      54.16\n7         Washington County      53.46\n8         Blue Earth County      50.84\n9               Clay County      50.74\n10              Lake County      50.64\n11          Nicollet County      50.31\n12           Carlton County      49.58\n13            Winona County      49.07\n14              Rice County      48.76\n15          Mahnomen County      48.26\n16             Anoka County      47.79\n17          Beltrami County      47.24\n18            Carver County      46.37\n19             Mower County      46.00\n20             Scott County      45.52\n21           Houston County      42.42\n22           Goodhue County      41.23\n23          Freeborn County      40.96\n24            Norman County      40.80\n25            Itasca County      40.61\n26       Koochiching County      38.41\n27          Watonwan County      38.20\n28           Kittson County      38.12\n29           Stevens County      37.80\n30           Stearns County      37.58\n31          Fillmore County      37.48\n32            Steele County      37.47\n33         Kandiyohi County      36.12\n34            Aitkin County      35.98\n35              Lyon County      35.94\n36     Lac qui Parle County      35.79\n37           Wabasha County      35.78\n38             Grant County      35.58\n39          Traverse County      35.46\n40         Big Stone County      35.41\n41        Pennington County      35.29\n42              Pope County      35.27\n43              Polk County      34.88\n44              Cass County      34.68\n45            Wright County      34.49\n46           Hubbard County      34.42\n47             Swift County      34.35\n48         Crow Wing County      34.17\n49           Chisago County      34.15\n50            Becker County      33.96\n51              Pine County      33.87\n52          Le Sueur County      33.73\n53          Chippewa County      33.67\n54            Nobles County      33.65\n55            Waseca County      33.65\n56             Dodge County      33.47\n57        Otter Tail County      32.85\n58            Benton County      32.70\n59           Douglas County      32.56\n60             Brown County      32.48\n61         Sherburne County      32.48\n62         Faribault County      31.98\n63          Red Lake County      31.47\n64          Renville County      30.71\n65            McLeod County      30.64\n66   Yellow Medicine County      30.54\n67           Lincoln County      30.08\n68        Cottonwood County      30.03\n69           Kanabec County      30.02\n70            Martin County      30.02\n71           Jackson County      29.99\n72        Mille Lacs County      29.98\n73            Wilkin County      29.91\n74              Rock County      29.69\n75            Murray County      29.60\n76            Isanti County      29.45\n77            Sibley County      28.60\n78            Meeker County      28.58\n79           Redwood County      28.43\n80 Lake of the Woods County      27.87\n81        Clearwater County      26.76\n82         Pipestone County      26.44\n83            Wadena County      26.35\n84            Roseau County      25.98\n85          Marshall County      25.33\n86              Todd County      24.79\n87          Morrison County      22.33\n\n# b) mn_wi: change in Dem % for MN & WI, sorted by change ascending\nmn_wi &lt;- elections_small %&gt;% \n  filter(state_name %in% c(\"Minnesota\", \"Wisconsin\")) %&gt;% \n  mutate(dem_change = dem_pct_20 - dem_pct_16) %&gt;% \n  select(state_name, county_name, dem_pct_20, dem_pct_16, dem_change) %&gt;% \n  arrange(dem_change)\nhead(mn_wi)\n\n  state_name        county_name dem_pct_20 dem_pct_16 dem_change\n1  Minnesota     Stevens County      37.80      39.55      -1.75\n2  Wisconsin      Forest County      34.06      35.12      -1.06\n3  Wisconsin    Kewaunee County      32.87      33.73      -0.86\n4  Wisconsin       Clark County      30.37      31.19      -0.82\n5  Wisconsin       Adams County      36.63      37.40      -0.77\n6  Wisconsin Trempealeau County      40.86      41.57      -0.71\n\n# c) Plot change in Dem % by county, colored by state\nggplot(mn_wi, aes(x = dem_change, y = county_name, color = state_name)) +\n  geom_point() +\n  labs(x = \"Change in Dem % (2020 vs 2016)\", y = \"County\", color = \"State\")\n\n\n\n\n\n\n# Exercise 7: summarize Demo\n# Median GOP % in 2020\nelections_small %&gt;% summarize(median(repub_pct_20))\n\n  median(repub_pct_20)\n1                68.29\n\n# Named summary\nelections_small %&gt;% summarize(median_repub = median(repub_pct_20))\n\n  median_repub\n1        68.29\n\n# Multiple summaries\nelections_small %&gt;% summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20))\n\n  median_repub total_votes\n1        68.29   157949293\n\n# Exercise 8: group_by + summarize\n# Summary by state\nelections_small %&gt;% \n  group_by(state_name) %&gt;% \n  summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20))\n\n# A tibble: 50 × 3\n   state_name           median_repub total_votes\n   &lt;chr&gt;                       &lt;dbl&gt;       &lt;int&gt;\n 1 Alabama                      70.6     2323304\n 2 Arizona                      57.9     3387326\n 3 Arkansas                     72.1     1219069\n 4 California                   44.8    17495906\n 5 Colorado                     56.2     3256953\n 6 Connecticut                  41.0     1824280\n 7 Delaware                     47.1      504010\n 8 District of Columbia          5.4      344356\n 9 Florida                      64.6    11067456\n10 Georgia                      68       4997716\n# ℹ 40 more rows\n\n# Exercise 9: DIY Summaries\n# Total votes by state, sorted\nelections_small %&gt;% \n  group_by(state_name) %&gt;% \n  summarize(total_votes_state = sum(total_votes_20)) %&gt;% \n  arrange(desc(total_votes_state))\n\n# A tibble: 50 × 2\n   state_name     total_votes_state\n   &lt;chr&gt;                      &lt;int&gt;\n 1 California              17495906\n 2 Texas                   11317911\n 3 Florida                 11067456\n 4 New York                 8616205\n 5 Pennsylvania             6925255\n 6 Illinois                 6038850\n 7 Ohio                     5922202\n 8 Michigan                 5539302\n 9 North Carolina           5524801\n10 Georgia                  4997716\n# ℹ 40 more rows\n\n# Total Dem & GOP votes by state\nelections_small %&gt;% \n  mutate(dem_votes = round(total_votes_20 * dem_pct_20 / 100),\n         rep_votes = round(total_votes_20 * repub_pct_20 / 100)) %&gt;% \n  group_by(state_name) %&gt;% \n  summarize(dem_votes = sum(dem_votes), rep_votes = sum(rep_votes))\n\n# A tibble: 50 × 3\n   state_name           dem_votes rep_votes\n   &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;\n 1 Alabama                 849664   1441155\n 2 Arizona                1672127   1661671\n 3 Arkansas                423919    760641\n 4 California            11109642   6006031\n 5 Colorado               1804393   1364627\n 6 Connecticut            1080677    715315\n 7 Delaware                296274    200601\n 8 District of Columbia    317324     18595\n 9 Florida                5297131   5668600\n10 Georgia                2473661   2461869\n# ℹ 40 more rows\n\n# States the Democrats won in 2020\nelections_small %&gt;% \n  mutate(dem_votes = round(total_votes_20 * dem_pct_20 / 100),\n         rep_votes = round(total_votes_20 * repub_pct_20 / 100)) %&gt;% \n  group_by(state_name) %&gt;% \n  summarize(dem_votes = sum(dem_votes), rep_votes = sum(rep_votes)) %&gt;% \n  filter(dem_votes &gt; rep_votes)\n\n# A tibble: 26 × 3\n   state_name           dem_votes rep_votes\n   &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;\n 1 Arizona                1672127   1661671\n 2 California            11109642   6006031\n 3 Colorado               1804393   1364627\n 4 Connecticut            1080677    715315\n 5 Delaware                296274    200601\n 6 District of Columbia    317324     18595\n 7 Georgia                2473661   2461869\n 8 Hawaii                  366121    196865\n 9 Illinois               3471916   2446931\n10 Maine                   430466    359897\n# ℹ 16 more rows\n\n# Exercise 10: Practice on World Cup data\nworld_cup &lt;- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")\n\n# Years Brazil won\nworld_cup %&gt;% filter(winner == \"Brazil\") %&gt;% pull(year)\n\n[1] 1958 1962 1970 1994 2002\n\n# Top 6 World Cups by attendance\nworld_cup %&gt;% arrange(desc(attendance)) %&gt;% head(6)\n\n  year               host  winner    second       third      fourth\n1 1994                USA  Brazil     Italy      Sweden    Bulgaria\n2 2014             Brazil Germany Argentina Netherlands      Brazil\n3 2006            Germany   Italy    France     Germany    Portugal\n4 2018             Russia  France   Croatia     Belgium     England\n5 1998             France  France    Brazil     Croatia Netherlands\n6 2002 Japan, South Korea  Brazil   Germany      Turkey South Korea\n  goals_scored teams games attendance\n1          141    24    52    3568567\n2          171    32    64    3441450\n3          147    32    64    3367000\n4          169    32    64    3031768\n5          171    32    64    2859234\n6          161    32    64    2724604\n\n# Univariate plot of goals_scored\nggplot(world_cup, aes(x = goals_scored)) +\n  geom_histogram(binwidth = 10) +\n  labs(x = \"Goals Scored\", y = \"Count of World Cups\")\n\n\n\n\n\n\n# Summary stats: min, median, max goals_scored\nworld_cup %&gt;% summarize(\n  min_goals = min(goals_scored),\n  median_goals = median(goals_scored),\n  max_goals = max(goals_scored)\n)\n\n  min_goals median_goals max_goals\n1        70          126       171\n\n# Bivariate: goals_scored over the years\nggplot(world_cup, aes(x = year, y = goals_scored)) +\n  geom_point() +\n  geom_line() +\n  labs(x = \"Year\", y = \"Goals Scored\")",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Wrangling</span>"
    ]
  }
]