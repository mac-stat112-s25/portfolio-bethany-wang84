{
  "hash": "bfd4748cfb650ead94a604a339d4b6ae",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Univariate Viz\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import data\nhikes <- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exercise 1:\n# Categorical (rating): observed categories, counts/proportions, relative prevalence,\n#                       logical order, clear axis labels.\n# Quantitative (elevation): range, center (mean/median), shape (skewness), spread, outliers.\n\n# Exercise 2: load ggplot tools\nlibrary(tidyverse)  # loads ggplot2 for visualization\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\n# Exercise 3–5: Bar chart of difficulty ratings\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](ica-uni_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# • Shows the three observed difficulty levels\n# • Counts per level reveal that “moderate” is most common\n\n# Exercise 6: Bar chart of elevation (ineffective for continuous data)\nggplot(hikes, aes(x = elevation)) +\n  geom_bar() +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n::: {.cell-output-display}\n![](ica-uni_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# • A bar for each unique elevation leads to clutter\n# • Fails to reveal overall distribution shape\n\n# Exercise 8–10: Histograms of elevation\n\n# Default bins\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram() +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-uni_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# • Rough view of distribution; bin boundaries may be arbitrary\n\n# White borders for clarity\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-uni_files/figure-html/unnamed-chunk-2-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# • Separates bins visually, improving readability\n\n# Blue fill\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-uni_files/figure-html/unnamed-chunk-2-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# • Combines border and fill for better aesthetics\n\n# Oversmoothed (binwidth = 1000)\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 1000) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n::: {.cell-output-display}\n![](ica-uni_files/figure-html/unnamed-chunk-2-6.png){width=672}\n:::\n\n```{.r .cell-code}\n# • Very wide bins hide detail; distribution too coarse\n\n# Noisy (binwidth = 5)\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 5) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n::: {.cell-output-display}\n![](ica-uni_files/figure-html/unnamed-chunk-2-7.png){width=672}\n:::\n\n```{.r .cell-code}\n# • Very narrow bins create noisy, spiky plot\n\n# Balanced (binwidth = 200)\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\", binwidth = 200) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n::: {.cell-output-display}\n![](ica-uni_files/figure-html/unnamed-chunk-2-8.png){width=672}\n:::\n\n```{.r .cell-code}\n# • Binwidth reveals center, spread, skew, and outliers effectively\n\n# Exercise 11: Density plot of elevation\nggplot(hikes, aes(x = elevation)) +\n  geom_density(color = \"blue\", fill = \"orange\", alpha = 0.5) +\n  labs(x = \"Elevation (feet)\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](ica-uni_files/figure-html/unnamed-chunk-2-9.png){width=672}\n:::\n\n```{.r .cell-code}\n# • Smooth distribution (area = 1), shows typical elevation, variability, skewness\n```\n:::\n\n\n\n\n\nUse this file for practice with the **univariate viz** in-class activity.  Refer to the class website for details.\n",
    "supporting": [
      "ica-uni_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}