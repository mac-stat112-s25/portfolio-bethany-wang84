{
  "hash": "001114d88c71ffccfc79baf14290afcd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Reshaping\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(fivethirtyeight)\ninstall.packages('fivethirtyeightdata', repos =\n'https://fivethirtyeightdata.github.io/drat/', type = 'source')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exercise 1: Sleep study reshaping & plotting\nsleep_wide <- read.csv(\"https://mac-stat.github.io/data/sleep_wide.csv\")\n\n# Part a: units are subject × day observations once in long format\n# Part b/c: pivot to long, fix types\nsleep_long <- sleep_wide %>%\n  pivot_longer(\n    cols = starts_with(\"day_\"),\n    names_to = \"day\",\n    names_prefix = \"day_\",\n    values_to = \"reaction_time\"\n  ) %>%\n  mutate(\n    Subject = as.factor(Subject),\n    day     = as.numeric(day)\n  )\n\nhead(sleep_long, 3)  # check first 3 rows\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  Subject   day reaction_time\n  <fct>   <dbl>         <dbl>\n1 308         0          250.\n2 308         1          259.\n3 308         2          251.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Plot all subjects on one panel\nggplot(sleep_long, aes(x = day, y = reaction_time, group = Subject, color = Subject)) +\n  geom_line() +\n  labs(\n    x     = \"Days of Sleep Restriction\",\n    y     = \"Reaction Time (ms)\",\n    title = \"Reaction Time by Day for Each Subject\"\n  )\n```\n\n::: {.cell-output-display}\n![](ica-reshaping_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Facet by subject for separate panels\nggplot(sleep_long, aes(x = day, y = reaction_time)) +\n  geom_line() +\n  facet_wrap(~ Subject) +\n  labs(\n    x     = \"Days\",\n    y     = \"Reaction Time (ms)\",\n    title = \"Individual Subject Trajectories\"\n  )\n```\n\n::: {.cell-output-display}\n![](ica-reshaping_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Part 4: pivot back to wide\nsleep_wide2 <- sleep_long %>%\n  pivot_wider(\n    names_from   = day,\n    names_prefix = \"day_\",\n    values_from  = reaction_time\n  )\nhead(sleep_wide2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 11\n  Subject day_0 day_1 day_2 day_3 day_4 day_5 day_6 day_7 day_8 day_9\n  <fct>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1 308      250.  259.  251.  321.  357.  415.  382.  290.  431.  466.\n2 309      223.  205.  203.  205.  208.  216.  214.  218.  224.  237.\n3 310      199.  194.  234.  233.  229.  220.  235.  256.  261.  248.\n4 330      322.  300.  284.  285.  286.  298.  280.  318.  305.  354.\n5 331      288.  285   302.  320.  316.  293.  290.  335.  294.  372.\n6 332      235.  243.  273.  310.  317.  310   454.  347.  330.  254.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Exercise 5: Billboard charts\ndata(\"billboard\")\n\n# Part a: wk2 vs wk1 scatter with 45° reference\nggplot(billboard, aes(x = wk1, y = wk2)) +\n  geom_point() +\n  geom_abline(intercept = 0, slope = 1, linetype = \"dashed\") +\n  labs(\n    x     = \"Week 1 Rank\",\n    y     = \"Week 2 Rank\",\n    title = \"Billboard: Week 2 vs Week 1 Rankings\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 5 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-reshaping_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Part b: songs that improved (rank↓)\nimproved <- billboard %>% filter(wk2 < wk1)\nimproved\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 255 × 79\n   artist     track date.entered   wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8\n   <chr>      <chr> <date>       <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 2 Pac      Baby… 2000-02-26      87    82    72    77    87    94    99    NA\n 2 2Ge+her    The … 2000-09-02      91    87    92    NA    NA    NA    NA    NA\n 3 3 Doors D… Kryp… 2000-04-08      81    70    68    67    66    57    54    53\n 4 504 Boyz   Wobb… 2000-04-15      57    34    25    17    17    31    36    49\n 5 98^0       Give… 2000-08-19      51    39    34    26    26    19     2     2\n 6 Aaliyah    I Do… 2000-01-29      84    62    51    41    38    35    35    38\n 7 Aaliyah    Try … 2000-03-18      59    53    38    28    21    18    16    14\n 8 Aguilera,… Come… 2000-08-05      57    47    45    29    23    18    11     9\n 9 Aguilera,… I Tu… 2000-04-15      50    39    30    28    21    19    20    17\n10 Aguilera,… What… 1999-11-27      71    51    28    18    13    13    11     1\n# ℹ 245 more rows\n# ℹ 68 more variables: wk9 <dbl>, wk10 <dbl>, wk11 <dbl>, wk12 <dbl>,\n#   wk13 <dbl>, wk14 <dbl>, wk15 <dbl>, wk16 <dbl>, wk17 <dbl>, wk18 <dbl>,\n#   wk19 <dbl>, wk20 <dbl>, wk21 <dbl>, wk22 <dbl>, wk23 <dbl>, wk24 <dbl>,\n#   wk25 <dbl>, wk26 <dbl>, wk27 <dbl>, wk28 <dbl>, wk29 <dbl>, wk30 <dbl>,\n#   wk31 <dbl>, wk32 <dbl>, wk33 <dbl>, wk34 <dbl>, wk35 <dbl>, wk36 <dbl>,\n#   wk37 <dbl>, wk38 <dbl>, wk39 <dbl>, wk40 <dbl>, wk41 <dbl>, wk42 <dbl>, …\n```\n\n\n:::\n\n```{.r .cell-code}\n# Part c: entries on 1999-11-06, drop track & date.entered\nnov_1999 <- billboard %>%\n  filter(date.entered == as.Date(\"1999-11-06\")) %>%\n  select(-track, -date.entered)\ndim(nov_1999)  # should be 2 × 77\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  2 77\n```\n\n\n:::\n\n```{.r .cell-code}\n# Part d: ranking over time for those two songs\nnov_long <- nov_1999 %>%\n  pivot_longer(\n    cols        = starts_with(\"wk\"),\n    names_to    = \"week\",\n    names_prefix= \"wk\",\n    values_to   = \"rank\"\n  ) %>%\n  mutate(week = as.integer(week))\n\nggplot(nov_long, aes(x = week, y = rank, color = artist)) +\n  geom_line() +\n  labs(\n    x     = \"Week on Chart\",\n    y     = \"Rank\",\n    title = \"Chart Trajectories for Nov 6, 1999 Entrants\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 79 rows containing missing values or values outside the scale range\n(`geom_line()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-reshaping_files/figure-html/unnamed-chunk-2-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Exercise 6: The Daily Show guests\ndata(\"daily_show_guests\")\ndaily <- daily_show_guests\n\n# a) Top 15 guests by total appearances\ntop_guests <- daily %>%\n  count(raw_guest_list, sort = TRUE) %>% \n  head(15)\ntop_guests\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 2\n   raw_guest_list        n\n   <chr>             <int>\n 1 Fareed Zakaria       19\n 2 Denis Leary          17\n 3 Brian Williams       16\n 4 Paul Rudd            13\n 5 Ricky Gervais        13\n 6 Tom Brokaw           12\n 7 Bill O'Reilly        10\n 8 Reza Aslan           10\n 9 Richard Lewis        10\n10 Will Ferrell         10\n11 Sarah Vowell          9\n12 Adam Sandler          8\n13 Ben Affleck           8\n14 Louis C.K.            8\n15 Maggie Gyllenhaal     8\n```\n\n\n:::\n\n```{.r .cell-code}\n# b) Appearances per year for those top 15\nguest_yearly <- daily %>%\n  count(raw_guest_list, year) %>%                  # count per guest × year\n  filter(raw_guest_list %in% top_guests$raw_guest_list) %>% \n  pivot_wider(\n    names_from   = year,                       # one column per year\n    values_from  = n,                          # counts go here\n    values_fill  = 0                           # fill missing with 0\n  ) %>%\n  mutate(total = rowSums(across(`1999`:`2015`))) %>%  # total appearances\n  arrange(desc(total))\nguest_yearly\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 19\n   raw_guest_list `1999` `2000` `2002` `2006` `2007` `2008` `2011` `2003` `2009`\n   <chr>           <int>  <int>  <int>  <int>  <int>  <int>  <int>  <int>  <int>\n 1 Fareed Zakaria      0      0      0      2      1      2      1      1      2\n 2 Denis Leary         1      0      2      1      1      2      2      1      1\n 3 Brian Williams      0      0      0      1      1      3      1      1      2\n 4 Paul Rudd           1      0      1      0      1      1      0      1      1\n 5 Ricky Gervais       0      0      0      2      0      1      1      0      2\n 6 Tom Brokaw          0      0      1      0      0      2      1      0      0\n 7 Bill O'Reilly       0      0      1      0      0      1      1      0      0\n 8 Reza Aslan          0      0      0      2      1      0      0      0      2\n 9 Richard Lewis       1      0      2      0      0      1      1      1      0\n10 Will Ferrell        0      1      0      1      0      0      1      1      1\n11 Sarah Vowell        0      0      1      1      0      1      1      0      1\n12 Adam Sandler        1      2      1      1      1      1      1      0      0\n13 Ben Affleck         0      0      0      1      1      0      0      2      1\n14 Louis C.K.          0      0      0      1      1      0      1      0      0\n15 Maggie Gyllen…      0      0      0      1      0      1      0      1      0\n# ℹ 9 more variables: `2010` <int>, `2012` <int>, `2014` <int>, `2001` <int>,\n#   `2004` <int>, `2005` <int>, `2013` <int>, `2015` <int>, total <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\n# c) Guest group trends over time\nplot_data <- daily %>%\n  mutate(\n    broad_group = case_when(\n      group %in% c(\"Acting\",\"Athletics\",\"Comedy\",\"Musician\") ~ \"Acting, Comedy & Music\",\n      group %in% c(\"Media\",\"media\",\"Science\",\"Academic\",\"Consultant\",\"Clergy\") ~ \"Media\",\n      group %in% c(\"Politician\",\"Political Aide\",\"Government\",\"Military\",\"Business\",\"Advocacy\") ~ \"Government & Politics\",\n      TRUE ~ NA_character_\n    )\n  ) %>%\n  filter(!is.na(broad_group))                # drop uncategorized\n\nfraction_data <- plot_data %>%\n  count(year, broad_group) %>%               # count per year × broad_group\n  group_by(year) %>%\n  mutate(fraction = n / sum(n))              # fraction within each year\n\nggplot(fraction_data, aes(x = year, y = fraction, color = broad_group)) +\n  geom_line() +\n  labs(\n    x     = \"Year\",\n    y     = \"Fraction of Guests\",\n    color = \"Guest Category\",\n    title = \"Yearly Composition of The Daily Show Guests\"\n  )\n```\n\n::: {.cell-output-display}\n![](ica-reshaping_files/figure-html/unnamed-chunk-2-5.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ica-reshaping_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}