{"title":"Joining","markdown":{"yaml":{"title":"Joining"},"headingText":"Exercise 1: Where are my keys?","containsRefs":false,"markdown":"\n```{r}\nlibrary(tidyverse)\n```\n\n```{r}\n\n# Part a: mismatched key names\nstudents_2 <- data.frame(\n  student = c(\"D\", \"E\", \"F\"),\n  class   = c(\"COMP 101\", \"BIOL 101\", \"POLI 101\")\n)\nenrollments_2 <- data.frame(\n  course     = c(\"ART 101\", \"BIOL 101\", \"COMP 101\"),\n  enrollment = c(18, 20, 19)\n)\n\n# correct left join by specifying key columns\nstudents_2 %>%\n  left_join(enrollments_2, join_by(class == course))\n# result: D→19, E→20, F→NA\n\n# Part c/d: joining on duplicate-named columns class & grade\nstudents_3 <- data.frame(\n  student = c(\"Y\",\"Y\",\"Z\",\"Z\"),\n  class   = c(\"COMP 101\",\"BIOL 101\",\"POLI 101\",\"COMP 101\"),\n  grade   = c(\"B\",\"S\",\"C\",\"A\")\n)\nenrollments_3 <- data.frame(\n  class      = c(\"ART 101\",\"BIOL 101\",\"COMP 101\"),\n  grade      = c(\"B\",\"A\",\"A-\"),\n  enrollment = c(20,18,19)\n)\n\n# only join on class, not grade\nstudents_3 %>%\n  left_join(enrollments_3, join_by(class == class))\n# grade.x = student grade; grade.y = average course grade\n\n# Exercise 2: More small practice\n\nvoters <- data.frame(\n  id          = c(\"A\",\"D\",\"E\",\"F\",\"G\"),\n  times_voted = c(2,4,17,6,20)\n)\ncontact <- data.frame(\n  name    = c(\"A\",\"B\",\"C\",\"D\"),\n  address = c(\"summit\",\"grand\",\"snelling\",\"fairview\"),\n  age     = c(24,89,43,38)\n)\n\n# 1. contact info for people who HAVEN'T voted\nanti_join(contact, voters, by = c(\"name\" = \"id\"))\n\n# 2. contact info for people who HAVE voted\nsemi_join(contact, voters, by = c(\"name\" = \"id\"))\n\n# 3. any data available on each person\nfull_join(voters, contact, by = c(\"id\" = \"name\"))\n\n# 4. add contact info to the voting roster where possible\nleft_join(voters, contact, by = c(\"id\" = \"name\"))\n\n# Exercise 3: Bigger datasets\n\ngrades <- read.csv(\"https://mac-stat.github.io/data/grades.csv\") %>%\n  distinct(sid, sessionID, .keep_all = TRUE)\ncourses <- read.csv(\"https://mac-stat.github.io/data/courses.csv\")\n\n# how many rows and columns?\ndim(grades)   # grades: rows × cols\ndim(courses)  # courses: rows × cols\n\n# Exercise 4: Class size\n\n# Part a: combine cross-listed sessions by summing enrollments\ncourses_combined <- courses %>%\n  group_by(sessionID) %>%\n  summarize(enroll = sum(enroll), .groups = \"drop\")\ndim(courses_combined)  # should be 1695 × 2\n\n# Part b: median class size overall\ncourses_combined %>%\n  summarize(median_class_size = median(enroll))\n\n# Part c: median class size experienced by each student\nstudent_class_size <- grades %>%\n  left_join(courses_combined, by = \"sessionID\") %>%\n  group_by(sid) %>%\n  summarize(median_size = median(enroll), .groups = \"drop\")\nhead(student_class_size)\n\n# Part d: histogram of median class sizes per student\nggplot(student_class_size, aes(x = median_size)) +\n  geom_histogram() +\n  labs(x = \"Median Class Size\", y = \"Number of Students\")\n\n# Exercise 5: Narrowing in on classes\n\n# Part a: students in session1986\ngrades %>%\n  filter(sessionID == \"session1986\")\n\n# Part b: students in department E courses\ndept_E <- courses %>% filter(dept == \"E\")\ngrades %>%\n  semi_join(dept_E, by = \"sessionID\") %>%\n  distinct(sid)\n\n# Exercise 6: All the wrangling\n\n# GPA conversion table\ngpa_conversion <- tibble(\n  grade = c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"C-\",\"D+\",\"D\",\"D-\",\"NC\",\"AU\",\"S\"),\n  gp    = c(4.3,4.0,3.7,3.3,3.0,2.7,2.3,2.0,1.7,1.3,1.0,0.7,0.0,NA,NA)\n)\n\n# Part a: total student enrollments by department\ngrades %>%\n  left_join(courses_combined, by = \"sessionID\") %>%\n  left_join(courses %>% select(sessionID, dept), by = \"sessionID\") %>%\n  count(dept, name = \"total_enrollments\") %>%\n  arrange(desc(total_enrollments))\n\n# Part b: GPA for each student\nstudent_gpa <- grades %>%\n  left_join(gpa_conversion, by = \"grade\") %>%\n  group_by(sid) %>%\n  summarize(gpa = mean(gp, na.rm = TRUE), .groups = \"drop\")\nhead(student_gpa)\n\n# Part c: median GPA across all students\nstudent_gpa %>%\n  summarize(median_gpa = median(gpa, na.rm = TRUE))\n\n# Part d: fraction of grades below B+ (gp < 3.3)\ngrades %>%\n  left_join(gpa_conversion, by = \"grade\") %>%\n  summarize(fraction_below_Bplus = mean(gp < 3.3, na.rm = TRUE))\n\n# Part e: GPA for each instructor\ngrades %>%\n  left_join(courses, by = \"sessionID\") %>%\n  left_join(gpa_conversion, by = \"grade\") %>%\n  group_by(iid) %>%\n  summarize(instructor_gpa = mean(gp, na.rm = TRUE), .groups = \"drop\") %>%\n  arrange(instructor_gpa)\n\n```\n\n","srcMarkdownNoYaml":"\n```{r}\nlibrary(tidyverse)\n```\n\n```{r}\n# Exercise 1: Where are my keys?\n\n# Part a: mismatched key names\nstudents_2 <- data.frame(\n  student = c(\"D\", \"E\", \"F\"),\n  class   = c(\"COMP 101\", \"BIOL 101\", \"POLI 101\")\n)\nenrollments_2 <- data.frame(\n  course     = c(\"ART 101\", \"BIOL 101\", \"COMP 101\"),\n  enrollment = c(18, 20, 19)\n)\n\n# correct left join by specifying key columns\nstudents_2 %>%\n  left_join(enrollments_2, join_by(class == course))\n# result: D→19, E→20, F→NA\n\n# Part c/d: joining on duplicate-named columns class & grade\nstudents_3 <- data.frame(\n  student = c(\"Y\",\"Y\",\"Z\",\"Z\"),\n  class   = c(\"COMP 101\",\"BIOL 101\",\"POLI 101\",\"COMP 101\"),\n  grade   = c(\"B\",\"S\",\"C\",\"A\")\n)\nenrollments_3 <- data.frame(\n  class      = c(\"ART 101\",\"BIOL 101\",\"COMP 101\"),\n  grade      = c(\"B\",\"A\",\"A-\"),\n  enrollment = c(20,18,19)\n)\n\n# only join on class, not grade\nstudents_3 %>%\n  left_join(enrollments_3, join_by(class == class))\n# grade.x = student grade; grade.y = average course grade\n\n# Exercise 2: More small practice\n\nvoters <- data.frame(\n  id          = c(\"A\",\"D\",\"E\",\"F\",\"G\"),\n  times_voted = c(2,4,17,6,20)\n)\ncontact <- data.frame(\n  name    = c(\"A\",\"B\",\"C\",\"D\"),\n  address = c(\"summit\",\"grand\",\"snelling\",\"fairview\"),\n  age     = c(24,89,43,38)\n)\n\n# 1. contact info for people who HAVEN'T voted\nanti_join(contact, voters, by = c(\"name\" = \"id\"))\n\n# 2. contact info for people who HAVE voted\nsemi_join(contact, voters, by = c(\"name\" = \"id\"))\n\n# 3. any data available on each person\nfull_join(voters, contact, by = c(\"id\" = \"name\"))\n\n# 4. add contact info to the voting roster where possible\nleft_join(voters, contact, by = c(\"id\" = \"name\"))\n\n# Exercise 3: Bigger datasets\n\ngrades <- read.csv(\"https://mac-stat.github.io/data/grades.csv\") %>%\n  distinct(sid, sessionID, .keep_all = TRUE)\ncourses <- read.csv(\"https://mac-stat.github.io/data/courses.csv\")\n\n# how many rows and columns?\ndim(grades)   # grades: rows × cols\ndim(courses)  # courses: rows × cols\n\n# Exercise 4: Class size\n\n# Part a: combine cross-listed sessions by summing enrollments\ncourses_combined <- courses %>%\n  group_by(sessionID) %>%\n  summarize(enroll = sum(enroll), .groups = \"drop\")\ndim(courses_combined)  # should be 1695 × 2\n\n# Part b: median class size overall\ncourses_combined %>%\n  summarize(median_class_size = median(enroll))\n\n# Part c: median class size experienced by each student\nstudent_class_size <- grades %>%\n  left_join(courses_combined, by = \"sessionID\") %>%\n  group_by(sid) %>%\n  summarize(median_size = median(enroll), .groups = \"drop\")\nhead(student_class_size)\n\n# Part d: histogram of median class sizes per student\nggplot(student_class_size, aes(x = median_size)) +\n  geom_histogram() +\n  labs(x = \"Median Class Size\", y = \"Number of Students\")\n\n# Exercise 5: Narrowing in on classes\n\n# Part a: students in session1986\ngrades %>%\n  filter(sessionID == \"session1986\")\n\n# Part b: students in department E courses\ndept_E <- courses %>% filter(dept == \"E\")\ngrades %>%\n  semi_join(dept_E, by = \"sessionID\") %>%\n  distinct(sid)\n\n# Exercise 6: All the wrangling\n\n# GPA conversion table\ngpa_conversion <- tibble(\n  grade = c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"C-\",\"D+\",\"D\",\"D-\",\"NC\",\"AU\",\"S\"),\n  gp    = c(4.3,4.0,3.7,3.3,3.0,2.7,2.3,2.0,1.7,1.3,1.0,0.7,0.0,NA,NA)\n)\n\n# Part a: total student enrollments by department\ngrades %>%\n  left_join(courses_combined, by = \"sessionID\") %>%\n  left_join(courses %>% select(sessionID, dept), by = \"sessionID\") %>%\n  count(dept, name = \"total_enrollments\") %>%\n  arrange(desc(total_enrollments))\n\n# Part b: GPA for each student\nstudent_gpa <- grades %>%\n  left_join(gpa_conversion, by = \"grade\") %>%\n  group_by(sid) %>%\n  summarize(gpa = mean(gp, na.rm = TRUE), .groups = \"drop\")\nhead(student_gpa)\n\n# Part c: median GPA across all students\nstudent_gpa %>%\n  summarize(median_gpa = median(gpa, na.rm = TRUE))\n\n# Part d: fraction of grades below B+ (gp < 3.3)\ngrades %>%\n  left_join(gpa_conversion, by = \"grade\") %>%\n  summarize(fraction_below_Bplus = mean(gp < 3.3, na.rm = TRUE))\n\n# Part e: GPA for each instructor\ngrades %>%\n  left_join(courses, by = \"sessionID\") %>%\n  left_join(gpa_conversion, by = \"grade\") %>%\n  group_by(iid) %>%\n  summarize(instructor_gpa = mean(gp, na.rm = TRUE), .groups = \"drop\") %>%\n  arrange(instructor_gpa)\n\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":false,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":true,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"css":["../style/custom.css"],"output-file":"ica-joining.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":{"markdown":{"wrap":"sentence"}},"theme":{"light":"flatly","dark":"darkly"},"code-copy":true,"title":"Joining"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}