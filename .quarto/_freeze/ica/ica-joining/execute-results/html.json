{
  "hash": "c1c66005f60ee1ea7a76d3c9f0625394",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Joining\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exercise 1: Where are my keys?\n\n# Part a: mismatched key names\nstudents_2 <- data.frame(\n  student = c(\"D\", \"E\", \"F\"),\n  class   = c(\"COMP 101\", \"BIOL 101\", \"POLI 101\")\n)\nenrollments_2 <- data.frame(\n  course     = c(\"ART 101\", \"BIOL 101\", \"COMP 101\"),\n  enrollment = c(18, 20, 19)\n)\n\n# correct left join by specifying key columns\nstudents_2 %>%\n  left_join(enrollments_2, join_by(class == course))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  student    class enrollment\n1       D COMP 101         19\n2       E BIOL 101         20\n3       F POLI 101         NA\n```\n\n\n:::\n\n```{.r .cell-code}\n# result: D→19, E→20, F→NA\n\n# Part c/d: joining on duplicate-named columns class & grade\nstudents_3 <- data.frame(\n  student = c(\"Y\",\"Y\",\"Z\",\"Z\"),\n  class   = c(\"COMP 101\",\"BIOL 101\",\"POLI 101\",\"COMP 101\"),\n  grade   = c(\"B\",\"S\",\"C\",\"A\")\n)\nenrollments_3 <- data.frame(\n  class      = c(\"ART 101\",\"BIOL 101\",\"COMP 101\"),\n  grade      = c(\"B\",\"A\",\"A-\"),\n  enrollment = c(20,18,19)\n)\n\n# only join on class, not grade\nstudents_3 %>%\n  left_join(enrollments_3, join_by(class == class))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  student    class grade.x grade.y enrollment\n1       Y COMP 101       B      A-         19\n2       Y BIOL 101       S       A         18\n3       Z POLI 101       C    <NA>         NA\n4       Z COMP 101       A      A-         19\n```\n\n\n:::\n\n```{.r .cell-code}\n# grade.x = student grade; grade.y = average course grade\n\n# Exercise 2: More small practice\n\nvoters <- data.frame(\n  id          = c(\"A\",\"D\",\"E\",\"F\",\"G\"),\n  times_voted = c(2,4,17,6,20)\n)\ncontact <- data.frame(\n  name    = c(\"A\",\"B\",\"C\",\"D\"),\n  address = c(\"summit\",\"grand\",\"snelling\",\"fairview\"),\n  age     = c(24,89,43,38)\n)\n\n# 1. contact info for people who HAVEN'T voted\nanti_join(contact, voters, by = c(\"name\" = \"id\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  name  address age\n1    B    grand  89\n2    C snelling  43\n```\n\n\n:::\n\n```{.r .cell-code}\n# 2. contact info for people who HAVE voted\nsemi_join(contact, voters, by = c(\"name\" = \"id\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  name  address age\n1    A   summit  24\n2    D fairview  38\n```\n\n\n:::\n\n```{.r .cell-code}\n# 3. any data available on each person\nfull_join(voters, contact, by = c(\"id\" = \"name\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  id times_voted  address age\n1  A           2   summit  24\n2  D           4 fairview  38\n3  E          17     <NA>  NA\n4  F           6     <NA>  NA\n5  G          20     <NA>  NA\n6  B          NA    grand  89\n7  C          NA snelling  43\n```\n\n\n:::\n\n```{.r .cell-code}\n# 4. add contact info to the voting roster where possible\nleft_join(voters, contact, by = c(\"id\" = \"name\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  id times_voted  address age\n1  A           2   summit  24\n2  D           4 fairview  38\n3  E          17     <NA>  NA\n4  F           6     <NA>  NA\n5  G          20     <NA>  NA\n```\n\n\n:::\n\n```{.r .cell-code}\n# Exercise 3: Bigger datasets\n\ngrades <- read.csv(\"https://mac-stat.github.io/data/grades.csv\") %>%\n  distinct(sid, sessionID, .keep_all = TRUE)\ncourses <- read.csv(\"https://mac-stat.github.io/data/courses.csv\")\n\n# how many rows and columns?\ndim(grades)   # grades: rows × cols\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5844    3\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(courses)  # courses: rows × cols\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1718    6\n```\n\n\n:::\n\n```{.r .cell-code}\n# Exercise 4: Class size\n\n# Part a: combine cross-listed sessions by summing enrollments\ncourses_combined <- courses %>%\n  group_by(sessionID) %>%\n  summarize(enroll = sum(enroll), .groups = \"drop\")\ndim(courses_combined)  # should be 1695 × 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1695    2\n```\n\n\n:::\n\n```{.r .cell-code}\n# Part b: median class size overall\ncourses_combined %>%\n  summarize(median_class_size = median(enroll))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  median_class_size\n              <int>\n1                18\n```\n\n\n:::\n\n```{.r .cell-code}\n# Part c: median class size experienced by each student\nstudent_class_size <- grades %>%\n  left_join(courses_combined, by = \"sessionID\") %>%\n  group_by(sid) %>%\n  summarize(median_size = median(enroll), .groups = \"drop\")\nhead(student_class_size)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  sid    median_size\n  <chr>        <dbl>\n1 S31185        23.5\n2 S31188        21  \n3 S31191        25  \n4 S31194        15  \n5 S31197        24  \n6 S31200        21  \n```\n\n\n:::\n\n```{.r .cell-code}\n# Part d: histogram of median class sizes per student\nggplot(student_class_size, aes(x = median_size)) +\n  geom_histogram() +\n  labs(x = \"Median Class Size\", y = \"Number of Students\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-joining_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Exercise 5: Narrowing in on classes\n\n# Part a: students in session1986\ngrades %>%\n  filter(sessionID == \"session1986\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     sid grade   sessionID\n1 S31401    B+ session1986\n2 S32247     B session1986\n```\n\n\n:::\n\n```{.r .cell-code}\n# Part b: students in department E courses\ndept_E <- courses %>% filter(dept == \"E\")\ngrades %>%\n  semi_join(dept_E, by = \"sessionID\") %>%\n  distinct(sid)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     sid\n1 S31245\n2 S31470\n3 S31938\n4 S31968\n5 S32022\n6 S32046\n7 S32226\n8 S32415\n9 S32484\n```\n\n\n:::\n\n```{.r .cell-code}\n# Exercise 6: All the wrangling\n\n# GPA conversion table\ngpa_conversion <- tibble(\n  grade = c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"C-\",\"D+\",\"D\",\"D-\",\"NC\",\"AU\",\"S\"),\n  gp    = c(4.3,4.0,3.7,3.3,3.0,2.7,2.3,2.0,1.7,1.3,1.0,0.7,0.0,NA,NA)\n)\n\n# Part a: total student enrollments by department\ngrades %>%\n  left_join(courses_combined, by = \"sessionID\") %>%\n  left_join(courses %>% select(sessionID, dept), by = \"sessionID\") %>%\n  count(dept, name = \"total_enrollments\") %>%\n  arrange(desc(total_enrollments))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in left_join(., courses %>% select(sessionID, dept), by = \"sessionID\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 64 of `x` matches multiple rows in `y`.\nℹ Row 807 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   dept total_enrollments\n1     d               483\n2     M               410\n3     m               363\n4     O               359\n5     W               336\n6     q               318\n7     F               296\n8     k               265\n9     j               249\n10    D               240\n11    C               237\n12    G               237\n13    R               195\n14    n               191\n15    i               177\n16    Q               157\n17    J               148\n18    X               145\n19    p               129\n20    e               128\n21    K               112\n22    H               110\n23    N                99\n24    S                97\n25    b                67\n26    T                62\n27    Y                57\n28    t                56\n29    L                50\n30    V                50\n31    g                34\n32    s                31\n33    o                27\n34    I                26\n35    P                26\n36    B                24\n37    U                24\n38    E                12\n39    A                 2\n40    l                 1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Part b: GPA for each student\nstudent_gpa <- grades %>%\n  left_join(gpa_conversion, by = \"grade\") %>%\n  group_by(sid) %>%\n  summarize(gpa = mean(gp, na.rm = TRUE), .groups = \"drop\")\nhead(student_gpa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  sid      gpa\n  <chr>  <dbl>\n1 S31185  2.41\n2 S31188  3.02\n3 S31191  3.21\n4 S31194  3.36\n5 S31197  3.35\n6 S31200  2.2 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Part c: median GPA across all students\nstudent_gpa %>%\n  summarize(median_gpa = median(gpa, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  median_gpa\n       <dbl>\n1       3.47\n```\n\n\n:::\n\n```{.r .cell-code}\n# Part d: fraction of grades below B+ (gp < 3.3)\ngrades %>%\n  left_join(gpa_conversion, by = \"grade\") %>%\n  summarize(fraction_below_Bplus = mean(gp < 3.3, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  fraction_below_Bplus\n1            0.2834776\n```\n\n\n:::\n\n```{.r .cell-code}\n# Part e: GPA for each instructor\ngrades %>%\n  left_join(courses, by = \"sessionID\") %>%\n  left_join(gpa_conversion, by = \"grade\") %>%\n  group_by(iid) %>%\n  summarize(instructor_gpa = mean(gp, na.rm = TRUE), .groups = \"drop\") %>%\n  arrange(instructor_gpa)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in left_join(., courses, by = \"sessionID\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 64 of `x` matches multiple rows in `y`.\nℹ Row 807 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 364 × 2\n   iid     instructor_gpa\n   <chr>            <dbl>\n 1 inst265           1.3 \n 2 inst444           1.7 \n 3 inst513           1.85\n 4 inst200           2   \n 5 inst507           2.2 \n 6 inst445           2.3 \n 7 inst420           2.6 \n 8 inst262           2.65\n 9 inst176           2.66\n10 inst234           2.7 \n# ℹ 354 more rows\n```\n\n\n:::\n:::\n",
    "supporting": [
      "ica-joining_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}